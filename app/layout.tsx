import { ourFileRouter } from "@/app/api/uploadthing/core";
import { SITE_TITLE } from "@/lib/constants";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { connection } from "next/server";
import { Suspense, type ReactNode } from "react";
import { extractRouterConfig } from "uploadthing/server";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: {
    default: SITE_TITLE,
    template: `%s | ${SITE_TITLE}`,
  },
  description: "Generated by create next app",
};

const RootLayout = ({ children }: { children: ReactNode }) => {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Suspense>
          <UploadThingSSR />
        </Suspense>

        {children}
      </body>
    </html>
  );
};

export default RootLayout;

const UploadThingSSR = async () => {
  await connection();

  return (
    <NextSSRPlugin
      /**
       * The `extractRouterConfig` will extract **only** the route configs
       * from the router to prevent additional information from being
       * leaked to the client. The data passed to the client is the same
       * as if you were to fetch `/api/uploadthing` directly.
       */
      routerConfig={extractRouterConfig(ourFileRouter)}
    />
  );
};
